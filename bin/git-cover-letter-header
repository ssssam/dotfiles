#!/usr/bin/env python

import re
import subprocess
import sys

def get_repository():
    remotes = subprocess.check_output(['git', 'remote', '-v'])
    fetch_pattern = re.compile('git://[^ ]+')
    return next(fetch_pattern.finditer(remotes)).group(0)

def get_branch():
    status = subprocess.check_output(
        ['git', 'status', '--branch', '--porcelain'])
    branch_line = status.split('\n')[0]
    branch_line = branch_line[3:]
    if '...' in branch_line:
        branch_line = branch_line[0:branch_line.find('...')]
    return branch_line

def get_sha1(ref):
    return subprocess.check_output(['git', 'rev-parse', ref]).strip()

def check_uncommitted_changes():
    status = subprocess.call(
        ['git', 'rev-parse', 'origin/%s' % branch],
        stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    return status != 0

repository = get_repository()
branch = get_branch()
sha1 = get_sha1(branch)

print
print "Repository: ", repository
print "Ref: ", branch
print "Sha1: ", sha1

if check_uncommitted_changes():
    sys.stderr.write(
       "Don't forget to push -- branch origin/%s does not "
       "exist!\n" % branch)
