#!/usr/bin/env python
#
# Copyright (C) 2014 Codethink Ltd. <sam.thursfield@codethink.co.uk>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import cliapp

import morphlib


class MorphListBranchesCommand(morphlib.app.Morph):
    '''
    List available system branches in the current Trove.

    This is basically Morph's equivalent of 'git branch -r'. It can be run
    anywhere in a workspace.
    '''

    def pretend_to_be_morph(self):
        self.settings['repo-alias'] = morphlib.util.combine_aliases(self)

    def cached_repo_list_branches(self, repo):
        # The repo we have here from the git cache mirrors the upstream repo
        # exactly, rather than being a working repo with multiple remotes.

        # BUG: this includes '* master' in the list!
        text = repo._runcmd(['git', 'branch'])
        return filter(None, (branch.strip() for branch in text.split('\n')))

    def process_args(self, args):
        self.pretend_to_be_morph()

        if len(args) > 1:
            raise morphlib.Error(
                "morph-list-branches takes one argument only: the name of the "
                "root repository")
        elif len(args) == 1:
            root_repo_url = args[0]
        else:
            root_repo_url = 'baserock:baserock/morphs'

        workspace = morphlib.workspace.open('.')
        lrc, rrc = morphlib.util.new_repo_caches(self)
        root_repo = lrc.get_updated_repo(root_repo_url)

        branches = self.cached_repo_list_branches(root_repo)
        print "Branches in %s:\n" % root_repo_url
        print '\t\n'.join(branches)


MorphListBranchesCommand(progname='morph').run()
