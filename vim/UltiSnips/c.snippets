snippet autoptr "g_autoptr"
g_autoptr ($1) $2 = NULL;
endsnippet

snippet gdbhook "Debug hook for manually debugging autostarted daemons"
g_print ("\n\n\nDebug me:\ngdb attach %i\n\n", getpid ());
g_usleep (10 * 1000 * 1000);
endsnippet

snippet trackerdebug "Add TRACKER_DEBUG check"
if (TRACKER_DEBUG_CHECK ($1)) {
endsnippet

snippet cbdata "Callback data"
typedef struct {
} $1Data;

static $1Data *
$1_data_new ()
{
	$1Data *data;

	data = g_slice_new0 ($1Data);

	return data;
}

static void
$1_data_free ($1Data *data)
{
	g_slice_free ($1Data, data);
}
endsnippet

snippet forl "For loop with GList"
for ($1 = $2; $1; $1 = $1->next) {
}
endsnippet

snippet gobject_properties "GObject property skeleton"
typedef enum
{
	PROP_$1 = 1,
	N_PROPERTIES
} $2Property;

static GParamSpec *obj_properties[N_PROPERTIES] = { NULL, };

static void
$2_set_property (GObject      *object,
                 guint         property_id,
                 const GValue *value,
                 GParamSpec   *pspec)
{
	$2 *self = $2 (object);

	switch (($2Property) property_id)
		{
			case PROP_$1:
				g_free (self->$1);
				self->$1 = g_value_dup_string (value);
				break;

			default:
				G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
				break;
		}
}

static void
$2_get_property (GObject    *object,
                 guint       property_id,
                 GValue     *value,
                 GParamSpec *pspec)
{
	$2 *self = $2 (object);

	switch (($2Property) property_id)
		{
			case PROP_$1:
				g_value_set_string (value, self->$1);
				break;

			default:
				G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
				break;
		}
}

static void
$2_class_init ($2Class *klass)
{
	GObjectClass *object_class = G_OBJECT_CLASS (klass);

	object_class->set_property = $2_set_property;
	object_class->get_property = $2_get_property;

	obj_properties[PROP_$1] = g_param_spec_string ("$1",
	                                               "$1 (Nick)",
	                                               "$1 (Descr)",
	                                               NULL  /* default value */,
	                                               G_PARAM_CONSTRUCT_ONLY | G_PARAM_READWRITE |
	                                               G_PARAM_STATIC_STRINGS);

	g_object_class_install_properties (object_class,
	                                   N_PROPERTIES,
	                                   obj_properties);
}
endsnippet
